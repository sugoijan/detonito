name: Deploy Yew CSR site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      BINARYEN_VERSION: "version_120"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Rust
        # Install Rust with support for targeting WASM
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-unknown-unknown

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Binaryen
        run: |
          wget https://github.com/WebAssembly/binaryen/releases/download/${BINARYEN_VERSION}/binaryen-${BINARYEN_VERSION}-x86_64-linux.tar.gz
          tar -xzf binaryen-${BINARYEN_VERSION}-x86_64-linux.tar.gz
          sudo cp binaryen-${BINARYEN_VERSION}/bin/* /usr/local/bin/

      - name: Install ttfautohint
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ttfautohint

      - name: Get Iosevka Submodule Commit Hash
        id: iosevka-commit-hash
        run: |
          echo "IOSEVKA_COMMIT=$(git -C detonito_webapp/vendor/Iosevka rev-parse HEAD)" >> $GITHUB_ENV

      - name: Calculate Hash of private-build-plans.toml
        id: build-plan-hash
        run: |
          BUILD_PLAN_HASH=$(sha256sum detonito_webapp/vendor/Iosevka-custom/private-build-plans.toml | cut -d' ' -f1)
          echo "BUILD_PLAN_HASH=$BUILD_PLAN_HASH" >> $GITHUB_ENV

      - name: Cache Fonts
        id: cache-fonts
        uses: actions/cache@v4
        with:
          path: detonito_webapp/vendor/Iosevka/dist
          key: iosevka-${{ env.IOSEVKA_COMMIT }}-${{ env.BUILD_PLAN_HASH }}

      - name: Generate Custom Iosevka Font
        if: steps.cache-fonts.outputs.cache-hit != 'true'
        shell: bash
        run: |
          cd detonito_webapp/vendor
          cp Iosevka-custom/private-build-plans.toml Iosevka/
          cd Iosevka
          npm install
          npm run build -- woff2-unhinted::IosevkaCustom

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install Trunk
        # Install trunk to build the project
        run: cargo install trunk

      - name: Build with Trunk
        # Build for release into ./_site (default is ./dist) and consider the public url
        run: |
          cd detonito_webapp
          trunk build --release --minify --dist ../_site --public-url "${{ steps.pages.outputs.base_path }}"

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
