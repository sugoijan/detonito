@forward "settings";
@use "settings" as *;

$openmoji-base: "color/svg";
$openmoji-ext: "svg";
$states-openmoji: (
  "not-started": "1F636",
  "mid-open": "1F62E",
  "in-progress": "1F642",
  "win": "1F60E",
  "lose": "1F635",
  "instant-win": "E283",
  "instant-loss": "1F480",
);
// alternative flags: 🚩⛳️ ⚑ ⚐
$marks-openmoji: (
  "flag": "1F6A9",
  "mine": "1F4A3",
  "question": "2754",
  "theme-light": "1F31E",
  "theme-dark": "1F31A",
  "theme-auto": "1F317",
  "diff-beginner": "1F476",
  "diff-intermediate": "1F607",
  "diff-expert": "1F913",
  "diff-evil": "1F608",
  "plus": "2795",
  "minus": "2796",
  "random": "1F3B2",
  "puzzle": "1F9E9",
);

$size-cell: 16px;
$font-size-cell: 14px;
$padding-vert: 5px;
$padding-hor: 6px;
$border-thin: 1px;
$border-fat: 3px;
$border-mid: 2px;

$counter-width: 41px;
$counter-height: 25px;

$top-spacing: 5px;
$top-height: 38px;

$state-size: 24px;

@mixin drop-shadow {
  box-shadow: var(#{$css-var-prefix}drop-shadow);
}

@mixin outset-border($width: 1px) {
  $light: var(#{$css-var-prefix}highlight);
  $dark: var(#{$css-var-prefix}shadow);
  border-style: solid;
  border-width: $width;
  border-color: $light $dark $dark $light;
}

@mixin inset-border($width: 1px) {
  $light: var(#{$css-var-prefix}highlight);
  $dark: var(#{$css-var-prefix}shadow);
  border-style: solid;
  border-width: $width;
  border-color: $dark $light $light $dark;
}

@mixin pressed-border($width: 1px) {
  $width2: $width - 1px;
  border-width: $width $width2 $width2 $width;
  border-color: var(#{$css-var-prefix}shadow);
}

#game {
  text-align: center;
}

.detonito {
  position: relative; // use this as base for position:absolute elements
  user-select: none; // selecting can get in the way, disable it
  display: inline-block;  // prevent it from enlargening horizontally
  @include drop-shadow;  // very slight, makes the white borders visible
  zoom: 2;  // default zoom
  min-width: 145px;
  min-height: 105px;

  * {
    // we want this for every element, so better do it now;
    box-sizing: border-box;
  }

  // style:
  @include outset-border($border-fat);
  background-color: var(#{$css-var-prefix}primary);
  padding: $padding-vert $padding-hor;

  > small {
    position: absolute;
    top: -3px;
    width: 16px;
    left: calc(50% - 8px);
    color: var(#{$css-var-prefix}highlight);
    font-size: 11px;
    height: 10px;
    cursor: pointer;
    font-family: "tahoma";
  }

  nav, table {
    @include inset-border($border-fat);
  }

  nav {
    height: $top-height;
    padding: 3px;
    margin-bottom: $top-spacing;
    &:not(.small) {
      display: grid;
      grid-template-columns: $counter-width 1fr $counter-width;
    }

    > aside {
      @include inset-border;
      min-width: $counter-width;
      min-height: $counter-height;
      max-width: $counter-width;
      max-height: $counter-height;
      color: var(#{$css-var-prefix}counter-text);
      // text styling:
      font-size: 25px;
      line-height: 24.5px;
      text-align: center;
      font-family: "Iosevka Custom Web";
      font-stretch: condensed;
      font-weight: 300;
      // background styling:
      background: repeating-linear-gradient(
        var(#{$css-var-prefix}counter-bg1),
        var(#{$css-var-prefix}counter-bg1) 2px,
        var(#{$css-var-prefix}counter-bg2) 2px,
        var(#{$css-var-prefix}counter-bg2) 3px
      );
    }

    > span {
      display: flex;
      justify-content: center;
      align-items: center;

      > button {
        @include outset-border($border-mid);
        min-height: $state-size;
        min-width: $state-size;
        max-height: $state-size;
        max-width: $state-size;
        outline: solid 1px var(#{$css-var-prefix}shadow);
        font-size: 20px;
        line-height: 20px;
        cursor: pointer;
        padding: 0;
        // $size: $state-size + 2 * $border-mid;
        $size: $state-size;
        background-color: var(#{$css-var-prefix}primary);
        background-size: $size;
        background-position: center;
        background-repeat: no-repeat;

        &:hover:active {
          @include pressed-border($border-mid);
          padding: 1px 0 0 1px;
          background-color: var(#{$css-var-prefix}background);
        }


        @each $state, $name in $states-openmoji {
          &.#{$state} {
            background-image: url("#{$openmoji-base}/#{$name}.#{$openmoji-ext}");
          }
        }
      }
    }
  }

  table {
    border-spacing: 0;
    margin: auto;
  }

  td, dialog button {
    border: 0;
    padding: 0;
    height: $size-cell;
    min-height: $size-cell;
    max-height: $size-cell;
    width: $size-cell;
    min-width: $size-cell;
    max-width: $size-cell;
    text-align: center;
    vertical-align: middle;
    font-family: "Iosevka Custom Web";
    font-stretch: expanded;
    font-weight: 900;
    font-size: $font-size-cell;
    line-height: 12px;
    background-position: center;
    background-repeat: no-repeat;
    background-size: 12px;
    background-color: var(#{$css-var-prefix}primary);
    @include outset-border($border-mid);

    &.open {
      background-color: var(#{$css-var-prefix}background);
      @include pressed-border;
    }

    &.wrong {
      background-color: var(#{$css-var-prefix}incorrect);
      #{$css-var-prefix}highlight: var(#{$css-var-prefix}incorrect-highlight);
      #{$css-var-prefix}shadow: var(#{$css-var-prefix}incorrect-shadow);
    }

    &.oops {
      background-color: var(#{$css-var-prefix}exploded);
    }

    @each $mark, $name in $marks-openmoji {
      &.#{$mark} {
        $size: $size-cell - 2 * $border-thin;
        background-image: url("#{$openmoji-base}/#{$name}.#{$openmoji-ext}");
      }
    }

    @for $i from 0 through 9 {
      &.num-#{$i} {
        color: var(#{$css-var-prefix}num#{$i});
        &:after {
          content: "#{$i}";
        }
      }
    }
  }

  dialog {
    $vert-space: 5px;
    $hor-space: 5px;
    position: absolute;
    top: 0;
    left: 0;
    margin: $vert-space $hor-space;
    padding: 0;
    display: block;
    width: calc(100% - (2 * $hor-space));
    height: calc(100% - (2 * $vert-space));
    border: 0;
    background-color: var(#{$css-var-prefix}primary);
    color: var(#{$css-var-prefix}text);
    text-align: left;
    font-family: "Iosevka Custom Web";
    font-stretch: condensed;
    font-weight: 400;
    font-size: 12px;
    line-height: 17px;

    small {
      display: inline-block;

      button {
        $size: $size-cell * 0.75;
        height: $size;
        min-height: $size;
        max-height: $size;
        width: $size;
        min-width: $size;
        max-width: $size;
        background-size: cover;
      }
    }

    &:not([open]) {
      display: none;
    }

    button:active:hover:not(.locked) {
      background-color: var(#{$css-var-prefix}background);
      @include pressed-border($border-thin);
    }

    button.pressed {
      background-color: var(#{$css-var-prefix}background);
      @include pressed-border($border-mid);
    }

    table {
      margin: 0 $hor-space 0 0;
      float: left;
    }

    hr {
      @include outset-border;
      margin: $vert-space (-$hor-space);
    }
  }
}
